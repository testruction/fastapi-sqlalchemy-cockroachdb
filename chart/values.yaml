# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

owner: "testruction.io"
repository:
  slug: testruction/fastapi-sqlalchemy-cockroachdb
slo:
  availabilityRate: 99.5

# Backend
backend:
  replicaCount: 1
  annotations: {}
  image:
    repository: ghcr.io/testruction/fastapi-sqlalchemy-cockroachdb/backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
    annotations: {}
  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  enabled: true
  env:
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: service.namespace=io.testruction,service.name=backendservice
  extraEnv: []
  tracing:
    url: null
    insecure: true
  database:
    engine: sqlite
    cockroachdb:
      host: null
      port: 26257
      username: root
      password: dummypassword
      database: postgres
  extraLabels:
    backstage.io/kubernetes-id: backend
  metrics:
    serviceMonitor:
      enabled: false
      labels: {}
      annotations: {}
      interval: 10s
      scrapeTimeout: null
      # Limits the ServiceMonitor to the current namespace if set to `true`.
      namespaced: true
      path: /metrics

# Frontend
frontend:
  replicaCount: 1
  annotations: {}
  image:
    repository: ghcr.io/testruction/fastapi-sqlalchemy-cockroachdb/frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
    annotations: {}
  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  enabled: true
  env:
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: service.namespace=io.testruction,service.name=frontendservice
  extraEnv: []
  tracing:
    url: null
    insecure: true
  extraLabels:
    backstage.io/kubernetes-id: frontend
  metrics:
    serviceMonitor:
      enabled: false
      labels: {}
      annotations: {}
      interval: 10s
      scrapeTimeout: null
      # Limits the ServiceMonitor to the current namespace if set to `true`.
      namespaced: true
      path: /metrics

global:
  serviceAccount:
    create: true
    name: ""

# Jaeger
jaeger:
  create: false
  allInOne:
    enabled: true
  ingester:
    enabled: false
  agent:
    enabled: false
  collector:
    enabled: false
  query:
    enabled: false
  spark:
    enabled: false
  hotrod:
    enabled: false
  provisionDataStore:
    cassandra: false
  extraEnv:
    - name: COLLECTOR_OTLP_ENABLED
      value: true

# CockroachDB
cockroachdb:
  create: false
  init:
    privisioning:
      enabled: true
  tls:
    enabled: false
